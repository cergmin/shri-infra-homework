name: Deploy

on:
  workflow_dispatch:
    inputs:
      release_version:
        description: 'Version of the release'
        required: true

jobs:
  deploy_to_prod:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Log in to the Yandex Container registry
        env:
          YC_TOKEN: ${{ secrets.YC_TOKEN }}
        run: |
          echo "$YC_TOKEN" | docker login --username oauth --password-stdin cr.yandex

      - name: Check if exists in Container Registry
        run: |
          if ! docker manifest inspect ${{ secrets.REGISTRY_ID }}/app:${{ github.event.inputs.release_version }}_latest; then
            echo "Image not found!" && exit 1
          fi

      - name: deploy VM
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VM_IP }}
          username: ${{ secrets.VM_USER }}
          key: ${{ secrets.VM_SSH_KEY }}
          script: |
            echo "Log in to Yandex Container Registry"
            echo "${{ secrets.YC_TOKEN }}" | docker login --username oauth --password-stdin cr.yandex
            docker pull ${{ secrets.REGISTRY_ID }}/app:${{ github.event.inputs.release_version }}_latest
            docker stop app || true
            docker rm app || true
            docker run -d --restart unless-stopped --name app -p 3000:3000 ${{ secrets.REGISTRY_ID }}/app:${{ github.event.inputs.release_version }}_latest
            
      - name: Set release date
        run: echo "CURRENT_DATE=$(date +'%Y-%m-%d')" >> $GITHUB_ENV
        
      - name: Comment on issue
        run: |
          gh issue comment $(gh issue list --search "Release ${{ github.event.inputs.release_version }}" --json number --jq '.[0].number') \
            --body "$BODY" \
        env:
          GITHUB_TOKEN: ${{ github.token }}
          BODY: Релиз ${{ github.event.inputs.release_version }} выкачен в прод ${{ env.CURRENT_DATE }} пользователем ${{ github.actor }}.
