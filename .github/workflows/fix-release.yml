name: Fix Release

on:
  workflow_dispatch:
    inputs:
      release_version:
        description: 'Version of the release'
        required: true
      issue_number:
        description: 'Issue number id'
        required: true
        type: number

jobs:
  lint:
    name: Run lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm ci

      - name: Run lint
        run: npm run lint

  test:
    name: Run tests
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm run test

  fix-release:
    runs-on: ubuntu-latest
    needs: [lint, test]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Get current date
        run: echo "DATE=$(date +'%Y-%m-%dT%H:%M:%S')" >> $GITHUB_ENV

      - name: Create fix release branch
        run: git checkout -b fix/${{ github.event.inputs.release_version }}

      - name: get commits since last tag
        run: |
          latest_tag=$(git describe --tags $(git rev-list --tags --max-count=1))
          commits=$(git log $latest_tag..HEAD --pretty=format:'%h - %s (%an)')
          echo "COMMITS=$commits" >> $GITHUB_ENV

      - name: build Docker image
        run: |
          docker build -t cr.yandex/${{ secrets.YANDEX_REGISTRY_ID }}/app:${{ github.event.inputs.release_version }}_fix${{ github.run_number }} .
          docker tag cr.yandex/${{ secrets.YANDEX_REGISTRY_ID }}/app:${{ github.event.inputs.release_version }}_fix${{ github.run_number }} cr.yandex/${{ secrets.YANDEX_REGISTRY_ID }}/app:${{ github.event.inputs.release_version }}_latest

      - name: push Docker image
        run: |
          echo ${{ secrets.YANDEX_PASSWORD }} | docker login --username ${{ secrets.YANDEX_USERNAME }} --password-stdin cr.yandex
          docker push cr.yandex/${{ secrets.YANDEX_REGISTRY_ID }}/app:${{ github.event.inputs.release_version }}_fix${{ github.run_number }}
          docker push cr.yandex/${{ secrets.YANDEX_REGISTRY_ID }}/app:${{ github.event.inputs.release_version }}_latest

      - name: create fix release tag
        run: |
          git tag ${{ github.event.inputs.release_version }}_fix${{ github.run_number }}
          git push origin ${{ github.event.inputs.release_version }}_fix${{ github.run_number }}

      - name: add comment to issue
        uses: peter-evans/create-or-update-comment@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          issue-number: ${{ github.event.inputs.issue_number }}
          body: |
            ## Fix Release ${{ github.event.inputs.release_version }}_fix${{ github.run_number }}

            - Дата фикса: ${{ env.DATE }}
            - Автор фикса: ${{ github.actor }}
            - Версия релиза: ${{ github.event.inputs.release_version }}
            - Коммиты:
              ${{ env.COMMITS }}
            - Ссылка на образ:
              cr.yandex/${{ secrets.YANDEX_REGISTRY_ID }}/app:${{ github.event.inputs.release_version }}_fix${{ github.run_number }}
