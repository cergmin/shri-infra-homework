name: fix release

on:
  workflow_dispatch:
    inputs:
      release_version:
        description: 'version of the release'
        required: true
      issue_number:
        description: 'issue number id'
        required: true
        type: number

jobs:
  lint:
    name: run lint
    runs-on: ubuntu-latest
    steps:
      - name: checkout code
        uses: actions/checkout@v3

      - name: set up node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: install dependencies
        run: npm ci

      - name: run lint
        run: npm run lint

  test:
    name: run tests
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: checkout code
        uses: actions/checkout@v3

      - name: set up node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: install dependencies
        run: npm ci

      - name: run tests
        run: npm run test

  fix-release:
    runs-on: ubuntu-latest
    needs: [lint, test]
    steps:
      - name: checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: fetch all tags and branches
        run: |
          git fetch --all --tags --prune

      - name: get current date
        run: echo "DATE=$(date +'%Y-%m-%dT%H:%M:%S')" >> $GITHUB_ENV

      - name: get commits since last tag
        run: |
          latest_tag=$(git tag -l | grep -E '^${{ github.event.inputs.release_version }}_fix[0-9]+$' | sort -t'_' -k3,3n | tail -n 1)
          echo "Latest tag: $latest_tag"
          if [ -z "$latest_tag" ]; then
            echo "No tags found."
            commits=$(git log --pretty=format:'%h - %s (%an)')
          else
            echo "Fetching commits since tag $latest_tag"
            commits=$(git log $latest_tag..HEAD --pretty=format:'%h - %s (%an)')
          fi
          if [ -z "$commits" ]; then
            echo "No commits found."
          else
            echo "Commits: $commits"
            echo "$commits" > commits.txt
          fi

      - name: сheckout release branch
        run: git checkout releases/${{ github.event.inputs.release_version }}

      - name: log in to yandex container registry
        run: echo ${{ secrets.YANDEX_REGISTRY_TOKEN }} | docker login --username oauth --password-stdin cr.yandex

      - name: build docker image
        run: |
          docker build -t cr.yandex/${{ secrets.YANDEX_REGISTRY_ID }}/app:${{ github.event.inputs.release_version }}_fix${{ github.run_number }} .
          docker tag cr.yandex/${{ secrets.YANDEX_REGISTRY_ID }}/app:${{ github.event.inputs.release_version }}_fix${{ github.run_number }} cr.yandex/${{ secrets.YANDEX_REGISTRY_ID }}/app:${{ github.event.inputs.release_version }}_latest

      - name: push docker image
        run: |
          docker push cr.yandex/${{ secrets.YANDEX_REGISTRY_ID }}/app:${{ github.event.inputs.release_version }}_fix${{ github.run_number }}
          docker push cr.yandex/${{ secrets.YANDEX_REGISTRY_ID }}/app:${{ github.event.inputs.release_version }}_latest

      - name: create fix release tag
        run: |
          git tag ${{ github.event.inputs.release_version }}_fix${{ github.run_number }}
          git push origin ${{ github.event.inputs.release_version }}_fix${{ github.run_number }}

      - name: read commits from file
        id: read_commits
        run: |
          commits=$(cat commits.txt)
          echo "::set-output name=commits::$commits"

      - name: add comment to issue
        uses: peter-evans/create-or-update-comment@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          issue-number: ${{ github.event.inputs.issue_number }}
          body: |
            ## Fix Release ${{ github.event.inputs.release_version }}_fix${{ github.run_number }}

            - Дата фикса: ${{ env.DATE }}
            - Автор фикса: ${{ github.actor }}
            - Версия релиза: ${{ github.event.inputs.release_version }}
            - Коммиты:
              ${{ steps.read_commits.outputs.commits }}
            - Ссылка на образ:
              cr.yandex/${{ secrets.YANDEX_REGISTRY_ID }}/app:${{ github.event.inputs.release_version }}_fix${{ github.run_number }}
