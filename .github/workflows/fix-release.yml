name: Fix release

on:
  workflow_dispatch:
    inputs:
      release_version:
        description: 'Release version'
        required: true

jobs:
  Check-up:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-node@v2
        with:
          node-version: '20.14.0'

      - run: npm install
      - run: npm run lint
      - run: npm run test

  hotfix:
    needs: Check-up
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-node@v2
        with:
          node-version: '20.14.0'

      - run: npm install

      - name: Log in to the Yandex Container registry
        env:
          YC_TOKEN: ${{ secrets.YC_TOKEN }}
        run: |
          echo "$YC_TOKEN" | docker login --username oauth --password-stdin cr.yandex
          
      - name: Build Docker image
        run: |
          docker build -t ${{ secrets.REGISTRY_ID }}/app:${{ github.event.inputs.release_version }}_fix${{ github.run_number }} .
          docker tag ${{ secrets.REGISTRY_ID }}/app:${{ github.event.inputs.release_version }}_fix${{ github.run_number }} ${{ secrets.REGISTRY_ID }}/app:${{ github.event.inputs.release_version }}_latest

      - name: Push Docker image to Container Registry
        run: |
          docker push ${{ secrets.REGISTRY_ID }}/app:${{ github.event.inputs.release_version }}_fix${{ github.run_number }}
          docker push ${{ secrets.REGISTRY_ID }}/app:${{ github.event.inputs.release_version }}_latest

      - name: Create fix tag
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          git fetch origin 
          git checkout releases/${{ github.event.inputs.release_version }}
          git tag -a v${{ github.event.inputs.release_version }}_fix${{ github.run_number }} -m "Fix version ${{ github.event.inputs.release_version }}_fix${{ github.run_number }}"
          git push https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git v${{ github.event.inputs.release_version }}_fix${{ github.run_number }}

      - name: Set release date
        run: echo "CURRENT_DATE=$(date +'%Y-%m-%d')" >> $GITHUB_ENV
        
      - name: Get commits
        run: |
          echo "::set-output name=log_changes::$(git log --pretty=format:"- %s (%h)" $(git describe --tags --abbrev=0)..HEAD)"
        
      - name: Create issue for release
        run: |
          gh issue comment $(gh issue list --search "Release ${{ github.event.inputs.release_version }}" --json number --jq '.[0].number') \
            --body "$BODY" \
        env:
          GITHUB_TOKEN: ${{ github.token }}
          BODY: |
            Дата: ${{ env.CURRENT_DATE }}
            Автор фикса: ${{ github.actor }}
            Список коммитов от предыдущего релизного (или фиксрелизного) тега: ${{ steps.get-log.outputs.log_changes }}
            Docker образ: ${{ secrets.REGISTRY_ID }}/app:${{ github.event.inputs.release_version }}_fix${{ github.run_number }}
