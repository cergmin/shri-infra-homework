name: release.yaml
on: [workflow_dispatch]

env:
  VERSION: ${{ github.run_number }}

jobs:
  test_n_lint:
    uses: ./.github/workflows/test_and_lint.yaml

  docker:
    needs: [ test_n_lint ]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - uses: pnpm/action-setup@v4
        name: Install pnpm
        with:
          run_install: false

      - name: Run build:docker
        run: pnpm run build:docker

  set_latestTag_n_commitList:
    needs: [ test_n_lint ]
    runs-on: ubuntu-latest

    outputs:
      PREVIOUS_TAG: ${{ steps.get_prev_tag.outputs.previous_tag }}
      COMMITS: ${{ steps.get_commits.outputs.commits }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Get previous tag
        id: get_prev_tag
        run: |
          previous_tag=$(git describe --tags --abbrev=0 HEAD --always)
          echo "previous_tag=$previous_tag"
          echo "previous_tag=$previous_tag" >> $GITHUB_OUTPUT

      - name: Get list of commits since previous tag
        id: get_commits
        run: |
          commits=$(git log $PREVIOUS_TAG..HEAD --oneline)
          echo "commits=$commits"
          echo "commits=$commits" >> $GITHUB_OUTPUT

  update_changelog:
    needs: [set_latestTag_n_commitList]
    runs-on: ubuntu-latest

    env:
      PREVIOUS_TAG: ${{ needs.set_latestTag_n_commitList.outputs.PREVIOUS_TAG }}
      COMMITS: ${{ needs.set_latestTag_n_commitList.outputs.COMMITS }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Update file locally
        run: |
          touch temp__TEMP__new_changelog.md
          echo "## Release $VERSION" > __TEMP__new_changelog.md
          echo "$COMMITS\n" >> __TEMP__new_changelog.md
          cat ./__TEMP__new_changelog.md
          cat CHANGELOG.md >> __TEMP__new_changelog.md
          mv __TEMP__new_changelog.md CHANGELOG.md

      - name: Commit and push CHANGELOG.md
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git checkout -b release-$VERSION
          git add CHANGELOG.md
          git commit -m "[BOT] Update CHANGELOG.md for release ${{env.VERSION}}"
          git push origin release-$VERSION

      - name: Create pull request
        id: create_pr
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "[BOT] Update CHANGELOG.md for release ${{ env.VERSION }}"
          branch: "release-$VERSION"
          base: "main"
          title: "[BOT] Release ${{ env.VERSION }}"
          body: "This PR updates the CHANGELOG.md for release ${{ env.VERSION }}."

      - name: Merge pull request
        if: steps.create_pr.outputs.pull-request-url != ''
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const prNumber = "${{ steps.create_pr.outputs.pull-request-number }}";
            await github.rest.pulls.merge({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: prNumber,
              merge_method: 'squash'
            })

  create_branch_n_tag:
    needs: [update_changelog]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup GH user
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Create and push release branch
        run: |
          git fetch
          git checkout main
          git pull origin main
          git tag $VERSION
          git push origin $VERSION
          git checkout -b release-$VERSION
          git push origin release-$VERSION

  create-release-issue:
    needs: [set_latestTag_n_commitList, update_changelog, docker]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Create issue content
        env:
          PREVIOUS_TAG: ${{ needs.set_latestTag_n_commitList.outputs.PREVIOUS_TAG }}
          COMMITS: ${{ needs.set_latestTag_n_commitList.outputs.COMMITS }}
        run: |
          echo "## Release Details" > issue-content.md
          echo "- Docker Image: \`for now nothing here\`" >> issue-content.md
          echo "- Date: $(date)" >> issue-content.md
          echo "- Author: ${{ github.actor }}" >> issue-content.md
          echo "- Version: $VERSION" >> issue-content.md
          echo "- Commits since last tag ($PREVIOUS_TAG):" >> issue-content.md
          echo "$COMMITS" >> issue-content.md

      - name: Create release issue
        uses: peter-evans/create-issue-from-file@v4
        with:
          title: "Release ${{ env.VERSION }}"
          content-filepath: issue-content.md
          labels: release
