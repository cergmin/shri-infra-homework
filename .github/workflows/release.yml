name: Release

on: workflow_dispatch

jobs:
  lint-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Clone repository
        uses: actions/checkout@v4
      - name: Use Node.js v20
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      - name: Install dependencies
        run: npm ci
      - name: Run lint
        run: npm run lint
      - name: Run tests
        run: npm run test
  create-branch:
    runs-on: ubuntu-latest
    needs: [lint-and-test]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Create release branch
        run: git checkout -b release/${{ github.run_number }}
      - name: Push release branch
        run: git push origin release/${{ github.run_number }}
  build-and-push-docker:
    runs-on: ubuntu-latest
    needs: [create-branch]
    steps:
      - name: Checkout release branch
        uses: actions/checkout@v4
        with:
          ref: release/${{ github.run_number }}
      - name: Login to Container registry
        run: |
            docker login \
              --username oauth \
              --password ${{ secrets.YA_OAUTH }} \
              cr.yandex
      - name: Build and push docker image
        run: |
            docker build -t cr.yandex/${{ secrets.CR_ID }}/app:${{ github.run_number }} .
            docker push cr.yandex/${{ secrets.CR_ID }}/app:${{ github.run_number }}
      - name: Build and push latest docker image
        run: |
            docker build -t cr.yandex/${{ secrets.CR_ID }}/app:${{ github.run_number }}_latest .
            docker push cr.yandex/${{ secrets.CR_ID }}/app:${{ github.run_number }}_latest
  tag-release:
    runs-on: ubuntu-latest
    needs: [create-branch]
    steps:
      - name: Checkout release branch
        uses: actions/checkout@v4
        with:
          ref: release/${{ github.run_number }}
      - name: Create and push tag
        uses: EndBug/latest-tag@latest
        with: 
          ref: ${{ github.run_number }}
  create-issue:
    runs-on: ubuntu-latest
    needs: [lint-and-test]
    steps:
      - name: Checkout release branch
        uses: actions/checkout@v4
        with:
          ref: release/${{ github.run_number }}
      - name: Configure git
        run: |
          git config --global user.email "${{ github.actor }}@users.noreply.github.com"
          git config --global user.name "${{ github.actor }}"
      - name: Create label
        run: |
          gh label create "release ${{ github.run_number }}"
        env:
          GH_TOKEN: ${{ github.token }}
      - name: Create issue
        run: |
          touch $ISSUE
          echo "**Release ${{ github.run_number }}**" >> $ISSUE
          echo "- Date: $(date)" >> $ISSUE
          echo "- Author: ${{ github.triggering_actor }}" >> $ISSUE
          echo "- Version: ${{ github.run_number }}" >> $ISSUE
          echo "- Commits: ${{ github.event.head_commit.message }}" >> $ISSUE
          git log --pretty=oneline >> $ISSUE
          echo "- YC Docker: cr.yandex/${{secrets.CR_ID}}/app:${{ github.run_number }}" >> $ISSUE
          gh issue create --title "Release ${{ github.run_number }}" --body-file $ISSUE --label "release ${{ github.run_number }}"
          rm $ISSUE
        env:
          ISSUE: issue.txt
          GH_TOKEN: ${{ github.token }}
